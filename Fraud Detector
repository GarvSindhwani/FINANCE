import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix

# Assume you have a dataset 'transactions.csv' with features and labels
# Features might include transaction amount, time, type, etc.
# Label 'is_fraud' indicates whether the transaction is fraudulent (1) or not (0)
df = pd.read_csv('transactions.csv')

# Feature selection (adjust based on your dataset)
X = df[['transaction_amount', 'transaction_time', 'transaction_type']]
y = df['is_fraud']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the logistic regression model
model = LogisticRegression()

# Train the model
model.fit(X_train, y_train)

# Predict on the test set
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy}')

# Confusion matrix
conf_matrix = confusion_matrix(y_test, y_pred)
print(f'Confusion Matrix:\n{conf_matrix}')
